#!/bin/bash

# Path to shaders
shaderpath="$HOME/.config/hypr/shader"

# Array of shader files
shaders=(
    "$shaderpath/nightshift.frag"
    "$shaderpath/bluelight.frag"
    "$shaderpath/monochrome.frag"
    #"$shaderpath/orig.frag"
    "$shaderpath/blue.frag"
    #"$shaderpath/chromatic.frag"
    "$shaderpath/crt.frag"
    "$shaderpath/extradark.frag"
)

# Get current shader
current_shader=$(hyprctl getoption decoration:screen_shader -j | jq -r '.str')

# Find the index of the current shader
current_index=-1
for i in "${!shaders[@]}"; do
    if [[ "${shaders[$i]}" == "$current_shader" ]]; then
        current_index=$i
        break
    fi
done

# Calculate the next shader index
if [[ $current_index -eq -1 ]]; then
    next_index=0
else
    next_index=$(( (current_index + 1) % ${#shaders[@]} ))
fi

# Set the previous shader (initially empty)
previous_shader=""

# Get previous shader if it exists
if [[ $current_index -ne -1 ]]; then
    previous_shader="${shaders[$current_index]}"
fi

# Set the new shader
next_shader="${shaders[$next_index]}"
hyprctl keyword decoration:screen_shader "$next_shader"
swaync-client --close-latest

# Notification message based on the new shader
case "$next_shader" in
    "$shaderpath/nightshift.frag")
        notify_message="Eye protection LEVEL MIN"
        ;;
    "$shaderpath/bluelight.frag")
        notify_message="Eye protection LEVEL MAX"
        ;;
    *)
        notify_message="Eye protection switched to another level"
        ;;
esac

# Send notification
notify-send "$notify_message"

# Check if the next shader is "$shaderpath/extradark.frag"
if [[ "$previous_shader" == "$shaderpath/extradark.frag" ]]; then
   notify-send "reloading"
    hyprctl reload
fi

exit
